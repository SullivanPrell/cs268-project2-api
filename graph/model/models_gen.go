// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

type Comment struct {
	ID       *string   `json:"id"`
	UserID   *string   `json:"userId"`
	PostID   *string   `json:"postId"`
	ThreadID *string   `json:"threadId"`
	Files    []*string `json:"files"`
	Content  *string   `json:"content"`
	Error    *Error    `json:"error"`
}

type CommentInput struct {
	Email     string `json:"email"`
	Token     string `json:"token"`
	CommentID string `json:"commentId"`
}

type CommentsInput struct {
	Email      string   `json:"email"`
	Token      string   `json:"token"`
	CommentIds []string `json:"commentIds"`
}

type CreateComment struct {
	Tags     []*string `json:"tags"`
	Content  string    `json:"content"`
	Files    []*string `json:"files"`
	ThreadID string    `json:"threadId"`
	PostID   string    `json:"postId"`
}

type CreatePost struct {
	Tags     []*string `json:"tags"`
	Content  string    `json:"content"`
	Files    []*string `json:"files"`
	ThreadID string    `json:"threadId"`
}

type CreateUser struct {
	Email         string  `json:"email"`
	Password      string  `json:"password"`
	DateOfBirth   string  `json:"dateOfBirth"`
	Major         string  `json:"major"`
	Minor         *string `json:"minor"`
	WillingToHelp bool    `json:"willingToHelp"`
}

type EmailVerified struct {
	Verified      *bool   `json:"verified"`
	DateValidated *string `json:"dateValidated"`
	Email         *string `json:"email"`
	Error         *Error  `json:"error"`
}

type Error struct {
	Error   bool   `json:"error"`
	Code    *int   `json:"code"`
	Message string `json:"Message"`
}

type Login struct {
	UserID string `json:"userId"`
	Email  string `json:"email"`
	Token  string `json:"token"`
	Error  *Error `json:"error"`
}

type LoginInput struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

type Post struct {
	ID       *string    `json:"id"`
	UserID   *string    `json:"userId"`
	Tags     []*string  `json:"tags"`
	Content  *string    `json:"content"`
	Files    []*string  `json:"files"`
	Comments []*Comment `json:"comments"`
	ThreadID *string    `json:"threadId"`
	Error    *Error     `json:"error"`
}

type PostInput struct {
	Email  string `json:"email"`
	Token  string `json:"token"`
	PostID string `json:"postId"`
}

type PostsInput struct {
	Email   string   `json:"email"`
	Token   string   `json:"token"`
	PostIds []string `json:"postIds"`
}

type User struct {
	ID            *string        `json:"id"`
	Email         *string        `json:"email"`
	FirstName     *string        `json:"firstName"`
	LastName      *string        `json:"lastName"`
	DateOfBirth   *string        `json:"dateOfBirth"`
	Major         *string        `json:"major"`
	Minor         *string        `json:"minor"`
	WillingToHelp *bool          `json:"willingToHelp"`
	Posts         []*Post        `json:"posts"`
	Comments      []*Comment     `json:"comments"`
	PostIds       []*string      `json:"postIds"`
	CommentIds    []*string      `json:"commentIds"`
	ClassesTaken  []*string      `json:"classesTaken"`
	PasswordHash  *string        `json:"passwordHash"`
	EmailVerified *EmailVerified `json:"emailVerified"`
	Error         *Error         `json:"error"`
}

type UserInput struct {
	Email string `json:"email"`
	Token string `json:"token"`
}

type VerifyEmail struct {
	Success bool   `json:"success"`
	Message string `json:"message"`
	Error   *Error `json:"error"`
}

type VerifyEmailInput struct {
	Email      string `json:"email"`
	EmailToken string `json:"emailToken"`
	Secret     string `json:"secret"`
}
